/*_________________________ Grid _________________________ */
.grid {
	$gutter: s(1, gutter);
	$gutter-sm: s(1, gutter-sm);

	&__row {
		position:relative;
		width: 100%;
		min-height: 1px;
	}
	&__container--no-pad,
	&__container--banner,
	&__container {
		position:relative;
		padding: 0 $gutter;
		display: flex;
		flex-wrap: wrap;
		margin-left: auto;
		margin-right: auto;
		max-width: $container-max-width;
		width: 100%;
		&--no-pad,
		&--banner {
			padding: 0;
		}
	}
	&__col {

		&-1-1,
		&-1-2,
		&-1-3 {
			position:relative;
		}
		&-1-1 {
			width: 100%;
		}
		&-1-2 {
			flex-basis: 50%;
			&:nth-of-type(odd) {
				padding-right: $gutter;
			}
			&:nth-of-type(even) {
				padding-left: $gutter;
			}
			@include under(sm) {
				flex-basis: 100%;
				min-width: 100%;
				&:nth-of-type(odd) {
					padding-right: 0;
				}
				&:nth-of-type(even) {
					padding-left: 0;
				}
				&--contain-fixed {
					order: -1;
				}
			}
			&--form {
				&:nth-of-type(odd) {
					padding-right: $gutter*2;
				}
				&:nth-of-type(even) {
					padding-left: $gutter*2;
				}

				@include under(md) {
					&:nth-of-type(odd) {
						padding-right: $gutter;
					}
					&:nth-of-type(even) {
						padding-left: $gutter;
					}
				}

				@include under(sm) {
					&:nth-of-type(odd) {
						padding-right: 0;
					}
					&:nth-of-type(even) {
						padding-left: 0;
					}
				}
			}

			&--collection {
				&:nth-of-type(odd) {
					padding-left: $gutter*2;
				}
				&:nth-of-type(even) {
					padding-right: $gutter*2;
				}

				@include under(md) {
					&:nth-of-type(odd) {
						padding-left: $gutter;
					}
					&:nth-of-type(even) {
						padding-right: $gutter;
					}
				}

				@include under(sm) {
					&:nth-of-type(odd) {
						padding-left: 0;
					}
					&:nth-of-type(even) {
						padding-right: 0;
					}
				}
			}
		}

		&-1-3{
			width: 33.33333%;
			@include over(sm) {
				&:nth-of-type(3n-2) {
					padding-right: $gutter + 16.666666px;
				}
				&:nth-of-type(3n-1) {
					padding-right: $gutter - 16.666666px;
					padding-left: $gutter - 16.666666px;
				}
				&:nth-of-type(3n) {
					padding-left: $gutter + 16.666666px;
				}
			}

			@include under(sm) {
				width: 50%;
				&:nth-of-type(odd) {
					padding-right: $gutter-sm;
				}
				&:nth-of-type(even) {
					padding-left: $gutter-sm;
				}
			}


			@include under(xs) {
				width: 100%;
				&:nth-of-type(odd) {
					padding-right: 0;
				}
				&:nth-of-type(even) {
					padding-left: 0;
				}
			}
		}
	}

	&__box {
		position:relative;
		width: 100%;
	}

	&__fixedElem {
		height: 200vh;//damos una altura que funcione sin problemas
		position: absolute;
		&.active {
		    height: 100%;
		  	position: fixed;
		  	overflow-y: scroll;
		  	top: 80px;
		}
	  	@include under(sm) {
	  		height: auto;
	  		position: relative;
	  		top: 0;
	  	}
	}
}


// /*Grid Debug*/

// .debug {
// 	.grid {
// 		&__row {
// 			position:relative;
// 			background-color: c();
// 			min-height: 200px;
// 		}
// 		&__container {
// 			position:relative;
// 			background-color: c(gold);
// 			min-height: 100px;
// 			margin-bottom: 20px;
// 		}
// 		&__col-1-2,
// 		&__col-1-3 {
// 			position:relative;
// 			display: flex;
// 			&:nth-of-type(even) {
// 	 			background-color: c(ocher);
// 	 			min-height: 100px;
// 			}
// 			&:nth-of-type(odd) {
// 				background-color: c(beige);
// 	 			min-height: 100px;
// 			}
// 			&--contain-fixed {
// 				background-color: c(dark);
// 			}
// 		}

// 		&__box {
// 			position: relative;
// 			background-color: (white);
// 			min-height: 50px;
// 			&--fixed {
// 				background-color: c(dark);
// 			}
// 		}

// 		&__fixedElem {
// 			background-color: c(dark);
// 			height: 200px;
// 		}
// 	}
// 	.image {
// 		&__col {
// 			&--right,
// 			&--left {
// 				@include center('y');
// 			}

// 			&--right {
// 				right: 0;
// 			}
// 			&--left {
// 				left: 0;
// 			}
// 		}
// 	}
// }

// #grid__fixedElem_JS {
// 	height: 200px;
// 	background-color: transparentize(c(gold), 0.5);
// 	position: fixed;
// 	top: 120px;
// 	@include under(sm){
// 		position: relative;
// 		top: 0;
// 	}
// }
